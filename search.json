[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 CRI Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/bslib_example.html","id":"r-markdown","dir":"Articles","previous_headings":"","what":"R Markdown","title":"Theming with bslib and thematic","text":"R Markdown document themed {bslib} package. bslib makes easy customize main colors fonts html_document, flexdashboard::flex_dashboard, shiny::fluidPage(), generally website uses Bootstrap styling. theme parameter yaml front-matter Rmd document describes bslib::bs_theme() object, provides access 100s theming options (via ... argument) addition main options demonstrated (e.g., bg, fg, primary, etc). particular example uses bslib’s default Bootstrap version (, time writing, Bootstrap 5). However, reproducibility important, ’s recommended “lock-” version adding version: 5 theme definition.","code":""},{"path":"/articles/bslib_example.html","id":"themed-plots","dir":"Articles","previous_headings":"","what":"Themed Plots","title":"Theming with bslib and thematic","text":"running document {thematic} installed, thematic::thematic_rmd(font = \"auto\") effectively translates theme (CSS) settings new global theming defaults ggplot2, lattice, {base} R graphics: ggplot2 lattice base","code":"library(ggplot2)  ggplot(mpg, aes(displ, hwy)) +   geom_point() + geom_smooth() ## `geom_smooth()` using method = 'loess' and formula 'y ~ x' lattice::show.settings() plot(pressure, col = thematic::thematic_get_option(\"accent\"))"},{"path":"/articles/naming_convention.html","id":"types-of-inputs","dir":"Articles","previous_headings":"","what":"Types of Inputs","title":"Naming Convention","text":"two types inputs function {rtichoke}: Predictions Outcomes:type input similar inputs similar packages pROC etc. can three different ways: vector predictions vector outcome: one model one population list predictions vector outcomes: several models one population. list predictions list outcomes: several models several populations, one model population. Like Train-Test comparison order asses model underfitted overfitted, analysis Fairness order check subgroups bigger population. function rtichoke variation supports kind input. Performance Data: Performance Data dataframe contations perfomance metrics different cutoffs. Similar packages `rtichoke` display curves based performance metrics looks perfectly smooth, purpose rtichoke slightly different: aim help user better identify relationship cutoffs give freedom manipulate order understand better connection cutoffs curve. Another reason using Performance Data building plots based small datasets much less memory consuming reusing smoothing algorithms .\\ Performance Data built metrics confusion matrix: TP, FP, TN, FN. sensitivity = TP / (TP + FN) specificity = TN / (TN + FP) \\ order prepare Performance Data need call `prepare_performance_data()`function obviously must take **Predictions Outcomes** input. functions `rtichoke` variations supports kind input","code":""},{"path":"/articles/naming_convention.html","id":"naming-convention","dir":"Articles","previous_headings":"","what":"Naming Convention","title":"Naming Convention","text":"functions rtichoke built work object called “performance_data” - data frame includes different performance metrics different cutoffs. functions built work estimated probabilities outcomes. function starts “create” (create scratch) - create_*(): prepare_performance_data() create_roc_curve() plot_roc_curve() create_lift_curve() plot_lift_curve() create_gains_curve() plot_gains_curve() create_precision_recall_curve() plot_precision_recall_curve() create_decision_curve() plot_decision_curve() create_calibration_curve() create_performance_table() render_performance_table() create_summary_report() render_summary_report()","code":""},{"path":"/articles/naming_convention.html","id":"plots-of-performance-metrics-across-different-thresholds","dir":"Articles","previous_headings":"","what":"Plots of Performance Metrics across different Thresholds","title":"Naming Convention","text":"Curves generated performance metrics can called plot_*_curve() create_*_curve Performance Data. Net Interactive Non-Interactive plot performance metrics rtichoke two versions: Interactive: plotly object displays dynamic point corresponds slider: Non Interactive: ggplot2 object. curves aren’t smooth? Unlike packages rtichoke doesn’t use smoothed curve collection connected dots, justification type … time 100 cutoff enough. Smoothing algorithms expensive computationally, specifically type curves might give user useful insights. fact smoothing can hide useful information, distribution cutoffs curves given symmetry threshold cutoffs symmetry probabilities percentiles {rephrase better way}. Take look two versions ROC curve: argument: user wants moother curve can change argument default 0.01 (like seq function):  stratified_byargument: use wants observe cutoffs according probabilities percentiles can setting stratified_by Probability Threshold.","code":"tibble::tribble(~\"Curve\", ~\"Sens\", ~\"Spec\", ~\"PPV\", ~\"PPCR\", ~\"Lift\", ~\"NB\", ~\"P. Thr\",                 \"ROC\",\"y\", \"x\", \" \", \" \", \" \", \" \", \" \",                 \"Lift\",\" \", \" \", \" \", \"x\", \"y\", \" \", \" \",                 \"Gains\",\" \", \"y\", \" \", \"x\", \" \", \" \", \" \",                 \"Precision Recall\",\"x\", \" \", \"y\", \" \", \" \", \" \", \" \",                 \"Decision\",\"x\", \" \", \"y\", \" \", \" \", \"y\", \"x\") %>%    gt::gt(rowname_col = \"Curve\")   %>%   gt::tab_style(     style = list(       gt::cell_text(weight = \"bold\")     ),     locations = gt::cells_column_labels(dplyr::everything())   )  %>%    gt::opt_table_lines(extent = \"default\") %>%   gt::tab_options(     column_labels.border.top.color = \"white\",     column_labels.border.top.width = gt::px(3),     column_labels.border.bottom.color = \"black\",     table_body.hlines.color = \"white\",     table.border.bottom.color = \"white\",     table.border.bottom.width = gt::px(3)   ) %>%   gt::cols_align(     align = \"center\"   ) %>%    gt::cols_width(     gt::everything() ~ px(100)   ) create_roc_curve(  probs = example_dat$estimated_probabilities,  real = example_dat$outcome,   by = 0.0001)"},{"path":"/articles/naming_convention.html","id":"interactive-tables","dir":"Articles","previous_headings":"","what":"Interactive Tables","title":"Naming Convention","text":"Interactive Performance Data just reactable object wraps Performance Data returns HTML object.. two advantages built interactive tables: Conditional Styling - performance metric displayed light green background case better (Sensitivity, Specificity etc), light red less better (FPR). color Net Benefit displayed light green positive values light red negative values. Filter options crosstalk - TRUE returns crosstalk object let user filter model / population main slider.","code":""},{"path":[]},{"path":"/articles/naming_convention.html","id":"calibration","dir":"Articles","previous_headings":"","what":"Calibration","title":"Naming Convention","text":"Plots calibration curve","code":""},{"path":[]},{"path":"/articles/performance_table_examples.html","id":"one-model-for-one-population","dir":"Articles","previous_headings":"","what":"1. One model for one population","title":"Performance Data Examples","text":"user just want observe performance one model. One can use single vector input probs argument: alternatively list single vector. case column named “model” added Performance Data, recommended name vectors:","code":"one_pop_one_model_as_a_vector <- prepare_performance_data(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome)  head(one_pop_one_model_as_a_vector) #> # A tibble: 6 × 14 #>   threshold    TP    TN    FN    FP sensitivity   FPR specificity   PPV   NPV #>       <dbl> <int> <int> <int> <int>       <dbl> <dbl>       <dbl> <dbl> <dbl> #> 1      0       50     0     0   100           1  1           0    0.333   NaN #> 2      0.01    50    51     0    49           1  0.49        0.51 0.505     1 #> 3      0.02    50    55     0    45           1  0.45        0.55 0.526     1 #> 4      0.03    50    61     0    39           1  0.39        0.61 0.562     1 #> 5      0.04    50    67     0    33           1  0.33        0.67 0.602     1 #> 6      0.05    50    67     0    33           1  0.33        0.67 0.602     1 #> # … with 4 more variables: lift <dbl>, predicted_positives <int>, NB <dbl>, #> #   ppcr <dbl>  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry <- prepare_performance_data(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome,   stratified_by = \"predicted_positives\")  head(one_pop_one_model_as_a_vector_enforced_percentiles_symmetry) #> # A tibble: 6 × 14 #>   threshold  ppcr    TP    TN    FN    FP sensitivity   FPR specificity   PPV #>       <dbl> <dbl> <int> <int> <int> <int>       <dbl> <dbl>       <dbl> <dbl> #> 1     0.996  0        0   100    50     0        0        0           1   NaN #> 2     0.994  0.01     1   100    49     0        0.02     0           1     1 #> 3     0.994  0.02     1   100    49     0        0.02     0           1     1 #> 4     0.986  0.03     5   100    45     0        0.1      0           1     1 #> 5     0.982  0.04     5   100    45     0        0.1      0           1     1 #> 6     0.982  0.05     5   100    45     0        0.1      0           1     1 #> # … with 4 more variables: NPV <dbl>, lift <dbl>, predicted_positives <int>, #> #   NB <dbl> one_pop_one_model_as_a_list <- prepare_performance_data(   probs = list(\"Logistic Regression\" = example_dat$estimated_probabilities),   real = example_dat$outcome)  head(one_pop_one_model_as_a_list) #> # A tibble: 6 × 15 #>   model    threshold    TP    TN    FN    FP sensitivity   FPR specificity   PPV #>   <chr>        <dbl> <int> <int> <int> <int>       <dbl> <dbl>       <dbl> <dbl> #> 1 Logisti…      0       50     0     0   100           1  1           0    0.333 #> 2 Logisti…      0.01    50    51     0    49           1  0.49        0.51 0.505 #> 3 Logisti…      0.02    50    55     0    45           1  0.45        0.55 0.526 #> 4 Logisti…      0.03    50    61     0    39           1  0.39        0.61 0.562 #> 5 Logisti…      0.04    50    67     0    33           1  0.33        0.67 0.602 #> 6 Logisti…      0.05    50    67     0    33           1  0.33        0.67 0.602 #> # … with 5 more variables: NPV <dbl>, lift <dbl>, predicted_positives <int>, #> #   NB <dbl>, ppcr <dbl>  one_pop_one_model_as_a_list_enforced_percentiles_symmetry <- prepare_performance_data(   probs = list(\"Logistic Regression\" = example_dat$estimated_probabilities),   real = example_dat$outcome,   stratified_by = \"predicted_positives\")  head(one_pop_one_model_as_a_list_enforced_percentiles_symmetry) #> # A tibble: 6 × 15 #>   model    threshold  ppcr    TP    TN    FN    FP sensitivity   FPR specificity #>   <chr>        <dbl> <dbl> <int> <int> <int> <int>       <dbl> <dbl>       <dbl> #> 1 Logisti…     0.996  0        0   100    50     0        0        0           1 #> 2 Logisti…     0.994  0.01     1   100    49     0        0.02     0           1 #> 3 Logisti…     0.994  0.02     1   100    49     0        0.02     0           1 #> 4 Logisti…     0.986  0.03     5   100    45     0        0.1      0           1 #> 5 Logisti…     0.982  0.04     5   100    45     0        0.1      0           1 #> 6 Logisti…     0.982  0.05     5   100    45     0        0.1      0           1 #> # … with 5 more variables: PPV <dbl>, NPV <dbl>, lift <dbl>, #> #   predicted_positives <int>, NB <dbl>"},{"path":"/articles/performance_table_examples.html","id":"several-models-for-one-population","dir":"Articles","previous_headings":"","what":"2. Several models for one population","title":"Performance Data Examples","text":"user wants compare several models. One needs use list vector population input probs argument. recommended name vectors:","code":"one_pop_three_models <- prepare_performance_data(   probs = list(\"Good Model\" = example_dat$estimated_probabilities,                \"Bad Model\" = example_dat$bad_model,                \"Random Guess\" = example_dat$random_guess),   real = example_dat$outcome)  one_pop_three_models_enforced_percentiles_symmetry <- prepare_performance_data(   probs = list(\"Good Model\" = example_dat$estimated_probabilities,                \"Bad Model\" = example_dat$bad_model,                \"Random Guess\" = example_dat$random_guess),   real = example_dat$outcome,    stratified_by = \"predicted_positives\")"},{"path":"/articles/performance_table_examples.html","id":"several-populations","dir":"Articles","previous_headings":"","what":"3. Several Populations","title":"Performance Data Examples","text":"user wants compare model performance different populations. Might usefull user wants check consistensy model among different populations, test-train split fairness analysis might good use cases. One needs use list vector model input probs argument real argument. column named “population” added Performance Data, recommended name vectors:","code":"train_and_test_sets <- prepare_performance_data(   probs = list(\"train\" = example_dat %>%                  dplyr::filter(type_of_set == \"train\") %>%                  dplyr::pull(estimated_probabilities),                \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%                  dplyr::pull(estimated_probabilities)),   real = list(\"train\" = example_dat %>%                  dplyr::filter(type_of_set == \"train\") %>%                 dplyr::pull(outcome),               \"test\" = example_dat %>%                  dplyr::filter(type_of_set == \"test\") %>%                 dplyr::pull(outcome)))  head(train_and_test_sets) #> # A tibble: 6 × 15 #>   population threshold    TP    TN    FN    FP sensitivity   FPR specificity #>   <chr>          <dbl> <int> <int> <int> <int>       <dbl> <dbl>       <dbl> #> 1 train           0       28     0     0    68           1 1           0     #> 2 train           0.01    28    36     0    32           1 0.471       0.529 #> 3 train           0.02    28    39     0    29           1 0.426       0.574 #> 4 train           0.03    28    43     0    25           1 0.368       0.632 #> 5 train           0.04    28    46     0    22           1 0.324       0.676 #> 6 train           0.05    28    46     0    22           1 0.324       0.676 #> # … with 6 more variables: PPV <dbl>, NPV <dbl>, lift <dbl>, #> #   predicted_positives <int>, NB <dbl>, ppcr <dbl>  train_and_test_sets_enforced_percentiles_symmetry <- prepare_performance_data(   probs = list(\"train\" = example_dat %>%                  dplyr::filter(type_of_set == \"train\") %>%                  dplyr::pull(estimated_probabilities),                \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%                  dplyr::pull(estimated_probabilities)),   real = list(\"train\" = example_dat %>%                  dplyr::filter(type_of_set == \"train\") %>%                 dplyr::pull(outcome),               \"test\" = example_dat %>%                  dplyr::filter(type_of_set == \"test\") %>%                 dplyr::pull(outcome)),    stratified_by = \"predicted_positives\")  head(train_and_test_sets_enforced_percentiles_symmetry) #> # A tibble: 6 × 15 #>   population threshold  ppcr    TP    TN    FN    FP sensitivity   FPR #>   <chr>          <dbl> <dbl> <int> <int> <int> <int>       <dbl> <dbl> #> 1 train          0.996  0        0    68    28     0      0          0 #> 2 train          0.994  0.01     1    68    27     0      0.0357     0 #> 3 train          0.994  0.02     1    68    27     0      0.0357     0 #> 4 train          0.990  0.03     3    68    25     0      0.107      0 #> 5 train          0.984  0.04     4    68    24     0      0.143      0 #> 6 train          0.974  0.05     5    68    23     0      0.179      0 #> # … with 6 more variables: specificity <dbl>, PPV <dbl>, NPV <dbl>, lift <dbl>, #> #   predicted_positives <int>, NB <dbl>"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Uriah Finkel. Maintainer, author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Finkel U (2022). rtichoke: rtichoke. R package version 0.0.0.9000, https://github.com/uriahf/rtichoke.","code":"@Manual{,   title = {rtichoke: rtichoke},   author = {Uriah Finkel},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/uriahf/rtichoke}, }"},{"path":"/index.html","id":"rtichoke","dir":"","previous_headings":"","what":"rtichoke","title":"rtichoke","text":"goal rtichoke …","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"rtichoke","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"uriahf/rtichoke\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"rtichoke","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/master/examples.","code":"summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"/reference/add_color_to_confusion_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding color to the confusion metric — add_color_to_confusion_metric","title":"Adding color to the confusion metric — add_color_to_confusion_metric","text":"Adding color confusion metric","code":""},{"path":"/reference/add_color_to_confusion_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding color to the confusion metric — add_color_to_confusion_metric","text":"","code":"add_color_to_confusion_metric(performance_dat, metric, color)"},{"path":"/reference/add_color_to_confusion_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding color to the confusion metric — add_color_to_confusion_metric","text":"performance_dat original performance data metric required metric color required color","code":""},{"path":"/reference/add_color_to_lift.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding color to the lift metric — add_color_to_lift","title":"Adding color to the lift metric — add_color_to_lift","text":"Adding color lift metric","code":""},{"path":"/reference/add_color_to_lift.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding color to the lift metric — add_color_to_lift","text":"","code":"add_color_to_lift(performance_dat, metric, color)"},{"path":"/reference/add_color_to_lift.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding color to the lift metric — add_color_to_lift","text":"performance_dat original performance data metric required metric color required color","code":""},{"path":"/reference/add_color_to_net_benifit.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding Color to Net Benifit metric — add_color_to_net_benifit","title":"Adding Color to Net Benifit metric — add_color_to_net_benifit","text":"Adding Color Net Benifit metric","code":""},{"path":"/reference/add_color_to_net_benifit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding Color to Net Benifit metric — add_color_to_net_benifit","text":"","code":"add_color_to_net_benifit(performance_data)"},{"path":"/reference/add_color_to_net_benifit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding Color to Net Benifit metric — add_color_to_net_benifit","text":"performance_data rtichoke Performance Data","code":""},{"path":"/reference/add_color_to_performance_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding color to performance metric — add_color_to_performance_metric","title":"Adding color to performance metric — add_color_to_performance_metric","text":"Adding color performance metric","code":""},{"path":"/reference/add_color_to_performance_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding color to performance metric — add_color_to_performance_metric","text":"","code":"add_color_to_performance_metric(performance_dat, metric, color)"},{"path":"/reference/add_color_to_performance_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding color to performance metric — add_color_to_performance_metric","text":"performance_dat original performance data metric required metric color required color","code":""},{"path":"/reference/add_colors_to_performance_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding color to Performance Data — add_colors_to_performance_dat","title":"Adding color to Performance Data — add_colors_to_performance_dat","text":"Adding color Performance Data","code":""},{"path":"/reference/add_colors_to_performance_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding color to Performance Data — add_colors_to_performance_dat","text":"","code":"add_colors_to_performance_dat(performance_dat)"},{"path":"/reference/add_colors_to_performance_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding color to Performance Data — add_colors_to_performance_dat","text":"performance_dat original performance data","code":""},{"path":"/reference/add_gains_curve_reference_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Add reference lines to Gains Curve — add_gains_curve_reference_lines","title":"Add reference lines to Gains Curve — add_gains_curve_reference_lines","text":"Add reference lines Gains Curve","code":""},{"path":"/reference/add_gains_curve_reference_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add reference lines to Gains Curve — add_gains_curve_reference_lines","text":"","code":"add_gains_curve_reference_lines(gains_curve, prevalence)"},{"path":"/reference/add_gains_curve_reference_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add reference lines to Gains Curve — add_gains_curve_reference_lines","text":"gains_curve ggplot object Gains Curve prevalence prevalence outcome","code":""},{"path":"/reference/add_hover_text_to_performance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding hover text to performance data — add_hover_text_to_performance_data","title":"Adding hover text to performance data — add_hover_text_to_performance_data","text":"Adding hover text performance data","code":""},{"path":"/reference/add_hover_text_to_performance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding hover text to performance data — add_hover_text_to_performance_data","text":"","code":"add_hover_text_to_performance_data(   performance_data,   performance_data_type,   curve )"},{"path":"/reference/add_hover_text_to_performance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding hover text to performance data — add_hover_text_to_performance_data","text":"performance_data perf dat performance_data_type perf dat type curve curve","code":""},{"path":"/reference/add_html_color_to_model_for_subtitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Add html color to model for subtitle — add_html_color_to_model_for_subtitle","title":"Add html color to model for subtitle — add_html_color_to_model_for_subtitle","text":"Add html color model subtitle","code":""},{"path":"/reference/add_html_color_to_model_for_subtitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add html color to model for subtitle — add_html_color_to_model_for_subtitle","text":"","code":"add_html_color_to_model_for_subtitle(model_name, model_color)"},{"path":"/reference/add_html_color_to_model_for_subtitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add html color to model for subtitle — add_html_color_to_model_for_subtitle","text":"model_name name model model_color color model","code":""},{"path":"/reference/add_interactive_marker_from_performance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add interactive marker based on performance data — add_interactive_marker_from_performance_data","title":"Add interactive marker based on performance data — add_interactive_marker_from_performance_data","text":"Add interactive marker based performance data","code":""},{"path":"/reference/add_interactive_marker_from_performance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add interactive marker based on performance data — add_interactive_marker_from_performance_data","text":"","code":"add_interactive_marker_from_performance_data(   plotly_object,   performance_data,   performance_data_type,   x_perf_metric,   y_perf_metric,   main_slider = \"threshold\" )"},{"path":"/reference/add_interactive_marker_from_performance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add interactive marker based on performance data — add_interactive_marker_from_performance_data","text":"plotly_object previous plotly object performance_data performance data plot performance_data_type type performance data x_perf_metric performance metric x axis y_perf_metric performance metric y axis main_slider main slider interactivity","code":""},{"path":"/reference/add_interactive_marker_to_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Interactive Marker to Plotly — add_interactive_marker_to_plotly","title":"Add Interactive Marker to Plotly — add_interactive_marker_to_plotly","text":"Add Interactive Marker Plotly","code":""},{"path":"/reference/add_interactive_marker_to_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Interactive Marker to Plotly — add_interactive_marker_to_plotly","text":"","code":"add_interactive_marker_to_plotly(plotly_object, main_slider = \"threshold\")"},{"path":"/reference/add_interactive_marker_to_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Interactive Marker to Plotly — add_interactive_marker_to_plotly","text":"plotly_object plotly plot performance metrics main_slider main slider - threshold, percent positives positives","code":""},{"path":"/reference/add_lines_and_markers_from_performance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Add lines and markers based on performance data — add_lines_and_markers_from_performance_data","title":"Add lines and markers based on performance data — add_lines_and_markers_from_performance_data","text":"Add lines markers based performance data","code":""},{"path":"/reference/add_lines_and_markers_from_performance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add lines and markers based on performance data — add_lines_and_markers_from_performance_data","text":"","code":"add_lines_and_markers_from_performance_data(   plotly_object,   performance_data,   performance_data_type,   x_perf_metric,   y_perf_metric,   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   main_slider = \"threshold\" )"},{"path":"/reference/add_lines_and_markers_from_performance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add lines and markers based on performance data — add_lines_and_markers_from_performance_data","text":"plotly_object previous plotly object performance_data performance data plot performance_data_type type performance data x_perf_metric performance metric x axis y_perf_metric performance metric y axis col_values color palette main_slider main slider interactivity","code":""},{"path":"/reference/add_markers_and_lines_to_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding markers and lines to plotly — add_markers_and_lines_to_plotly","title":"Adding markers and lines to plotly — add_markers_and_lines_to_plotly","text":"Adding markers lines plotly","code":""},{"path":"/reference/add_markers_and_lines_to_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding markers and lines to plotly — add_markers_and_lines_to_plotly","text":"","code":"add_markers_and_lines_to_plotly(plotly_object, performance_data_type)"},{"path":"/reference/add_markers_and_lines_to_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding markers and lines to plotly — add_markers_and_lines_to_plotly","text":"plotly_object plotly object performance_data_type type performance data","code":""},{"path":"/reference/add_models_for_text_for_hover.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding models for text to hover — add_models_for_text_for_hover","title":"Adding models for text to hover — add_models_for_text_for_hover","text":"Adding models text hover","code":""},{"path":"/reference/add_models_for_text_for_hover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding models for text to hover — add_models_for_text_for_hover","text":"","code":"add_models_for_text_for_hover(text_for_hover)"},{"path":"/reference/add_models_for_text_for_hover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding models for text to hover — add_models_for_text_for_hover","text":"text_for_hover text","code":""},{"path":"/reference/add_population_for_text_for_hover.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding population for text to hover — add_population_for_text_for_hover","title":"Adding population for text to hover — add_population_for_text_for_hover","text":"Adding population text hover","code":""},{"path":"/reference/add_population_for_text_for_hover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding population for text to hover — add_population_for_text_for_hover","text":"","code":"add_population_for_text_for_hover(text_for_hover)"},{"path":"/reference/add_population_for_text_for_hover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding population for text to hover — add_population_for_text_for_hover","text":"text_for_hover text","code":""},{"path":"/reference/add_reference_lines_to_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Add reference lines to ggplot curve — add_reference_lines_to_ggplot","title":"Add reference lines to ggplot curve — add_reference_lines_to_ggplot","text":"Add reference lines ggplot curve","code":""},{"path":"/reference/add_reference_lines_to_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add reference lines to ggplot curve — add_reference_lines_to_ggplot","text":"","code":"add_reference_lines_to_ggplot(ggplot_curve, reference_lines)"},{"path":"/reference/add_reference_lines_to_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add reference lines to ggplot curve — add_reference_lines_to_ggplot","text":"ggplot_curve non interactive ggplot curve reference_lines dataframe reference lines","code":""},{"path":"/reference/add_reference_lines_to_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Reference Lines to Plotly Object — add_reference_lines_to_plotly","title":"Add Reference Lines to Plotly Object — add_reference_lines_to_plotly","text":"Add Reference Lines Plotly Object","code":""},{"path":"/reference/add_reference_lines_to_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Reference Lines to Plotly Object — add_reference_lines_to_plotly","text":"","code":"add_reference_lines_to_plotly(   plotly_object,   reference_lines,   performance_data_type = \"one model\" )"},{"path":"/reference/add_reference_lines_to_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Reference Lines to Plotly Object — add_reference_lines_to_plotly","text":"plotly_object plotly plot performance metrics reference_lines dataframe reference lines performance_data_type type Performance Data","code":""},{"path":"/reference/add_zebra_colors_to_gt_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Zebra colors to gt table — add_zebra_colors_to_gt_table","title":"Add Zebra colors to gt table — add_zebra_colors_to_gt_table","text":"Add Zebra colors gt table","code":""},{"path":"/reference/add_zebra_colors_to_gt_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Zebra colors to gt table — add_zebra_colors_to_gt_table","text":"","code":"add_zebra_colors_to_gt_table(performance_table, add_zebra_colors)"},{"path":"/reference/add_zebra_colors_to_gt_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Zebra colors to gt table — add_zebra_colors_to_gt_table","text":"performance_table gt performance table add_zebra_colors add zebra colors keep table (FALSE)","code":""},{"path":"/reference/arrange_estimated_probabilities_to_long_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrange estimated probabilities to long format — arrange_estimated_probabilities_to_long_format","title":"Arrange estimated probabilities to long format — arrange_estimated_probabilities_to_long_format","text":"Arrange estimated probabilities long format","code":""},{"path":"/reference/arrange_estimated_probabilities_to_long_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrange estimated probabilities to long format — arrange_estimated_probabilities_to_long_format","text":"","code":"arrange_estimated_probabilities_to_long_format(probs)"},{"path":"/reference/arrange_estimated_probabilities_to_long_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrange estimated probabilities to long format — arrange_estimated_probabilities_to_long_format","text":"probs vector estimated probabilities list vectors kind (one model)","code":""},{"path":"/reference/arrange_estimated_probabilities_to_long_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrange estimated probabilities to long format — arrange_estimated_probabilities_to_long_format","text":"","code":"if (FALSE) { arrange_estimated_probabilities_to_long_format(   probs = list(\"First Model\" = example_dat$estimated_probabilities) ) }"},{"path":"/reference/bar_chart.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating html bar — bar_chart","title":"Creating html bar — bar_chart","text":"Creating html bar","code":""},{"path":"/reference/bar_chart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating html bar — bar_chart","text":"","code":"bar_chart(value, display, color = \"red\", digits = 0, no_round = FALSE)"},{"path":"/reference/bar_chart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating html bar — bar_chart","text":"value original value display displayed value color color bar digits number digits no_round rounding","code":""},{"path":"/reference/bar_style_nb_reactable.html","id":null,"dir":"Reference","previous_headings":"","what":"Add background color — bar_style_nb_reactable","title":"Add background color — bar_style_nb_reactable","text":"Add background color","code":""},{"path":"/reference/bar_style_nb_reactable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add background color — bar_style_nb_reactable","text":"","code":"bar_style_nb_reactable(width = 1, pos_fill = \"lightgreen\", neg_fill = \"pink\")"},{"path":"/reference/bar_style_nb_reactable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add background color — bar_style_nb_reactable","text":"width background color","code":""},{"path":"/reference/bar_style_perf.html","id":null,"dir":"Reference","previous_headings":"","what":"Add background color — bar_style_perf","title":"Add background color — bar_style_perf","text":"Add background color","code":""},{"path":"/reference/bar_style_perf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add background color — bar_style_perf","text":"","code":"bar_style_perf(width = 1, color = \"lightgreen\")"},{"path":"/reference/bar_style_perf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add background color — bar_style_perf","text":"width background color","code":""},{"path":"/reference/check_chosen_threshold_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check chosen threshold input — check_chosen_threshold_input","title":"Check chosen threshold input — check_chosen_threshold_input","text":"Check chosen threshold input","code":""},{"path":"/reference/check_chosen_threshold_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check chosen threshold input — check_chosen_threshold_input","text":"","code":"check_chosen_threshold_input(chosen_threshold)"},{"path":"/reference/check_chosen_threshold_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check chosen threshold input — check_chosen_threshold_input","text":"","code":"if (FALSE) { check_chosen_threshold_input(0.23) check_chosen_threshold_input(1.02) }"},{"path":"/reference/check_performance_data_stratification.html","id":null,"dir":"Reference","previous_headings":"","what":"Check cheson threshold input — check_performance_data_stratification","title":"Check cheson threshold input — check_performance_data_stratification","text":"Check cheson threshold input","code":""},{"path":"/reference/check_performance_data_stratification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check cheson threshold input — check_performance_data_stratification","text":"","code":"check_performance_data_stratification(performance_data)"},{"path":"/reference/check_performance_data_stratification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check cheson threshold input — check_performance_data_stratification","text":"","code":"if (FALSE) { check_performance_data_stratification(one_pop_one_model_as_a_vector) check_performance_data_stratification(   one_pop_one_model_as_a_vector_enforced_percentiles_symmetry ) }"},{"path":"/reference/check_performance_data_type_for_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Performance type for plotly — check_performance_data_type_for_plotly","title":"Check Performance type for plotly — check_performance_data_type_for_plotly","text":"Check Performance type plotly","code":""},{"path":"/reference/check_performance_data_type_for_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Performance type for plotly — check_performance_data_type_for_plotly","text":"","code":"check_performance_data_type_for_plotly(performance_data)"},{"path":"/reference/check_performance_data_type_for_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Performance type for plotly — check_performance_data_type_for_plotly","text":"performance_data rtichoke Performance Data","code":""},{"path":"/reference/check_probs_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check probs input — check_probs_input","title":"Check probs input — check_probs_input","text":"Check probs input","code":""},{"path":"/reference/check_probs_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check probs input — check_probs_input","text":"","code":"check_probs_input(probs)"},{"path":"/reference/check_probs_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check probs input — check_probs_input","text":"probs vector estimated probabilities list vectors kind (one model)","code":""},{"path":"/reference/check_probs_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check probs input — check_probs_input","text":"","code":"if (FALSE) { check_probs_input(example_dat$estimated_probabilities)  list(   \"train\" = example_dat %>%     dplyr::filter(type_of_set == \"train\") %>%     dplyr::pull(estimated_probabilities),   \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%     dplyr::pull(estimated_probabilities) ) %>%   check_probs_input()  check_probs_input(c(example_dat$estimated_probabilities, -0.1)) check_probs_input(c(example_dat$estimated_probabilities, 1.1))  list(   \"train\" = example_dat %>%     dplyr::filter(type_of_set == \"train\") %>%     dplyr::pull(estimated_probabilities),   \"test\" = c(example_dat %>% dplyr::filter(type_of_set == \"test\") %>%     dplyr::pull(estimated_probabilities), -0.2) ) %>%   check_probs_input() }"},{"path":"/reference/check_real_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Check real input — check_real_input","title":"Check real input — check_real_input","text":"Check real input","code":""},{"path":"/reference/check_real_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check real input — check_real_input","text":"","code":"check_real_input(real)"},{"path":"/reference/check_real_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check real input — check_real_input","text":"real vector binary outcomes list vectors kind (one population)","code":""},{"path":"/reference/check_real_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check real input — check_real_input","text":"","code":"if (FALSE) { check_real_input(example_dat$outcome)  list(   \"train\" = example_dat %>%     dplyr::filter(type_of_set == \"train\") %>%     dplyr::pull(outcome),   \"test\" = example_dat %>%     dplyr::filter(type_of_set == \"test\") %>%     dplyr::pull(outcome) ) %>%   check_real_input()  check_real_input(c(example_dat$outcome, -0.1)) check_real_input(c(example_dat$outcome, 1.1))  list(   \"train\" = example_dat %>%     dplyr::filter(type_of_set == \"train\") %>%     dplyr::pull(outcome),   \"test\" = c(example_dat %>% dplyr::filter(type_of_set == \"test\") %>%     dplyr::pull(outcome), -0.2) ) %>%   check_real_input() }"},{"path":"/reference/create_calibration_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Calibration Curve — create_calibration_curve","title":"Create a Calibration Curve — create_calibration_curve","text":"Create Calibration Curve","code":""},{"path":"/reference/create_calibration_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Calibration Curve — create_calibration_curve","text":"","code":"create_calibration_curve(   probs,   real,   interactive = FALSE,   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   title_included = FALSE,   type = \"discrete\",   size = NULL )"},{"path":"/reference/create_calibration_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Calibration Curve — create_calibration_curve","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) interactive whether plot interactive plots col_values color palette title_included add title curve type discrete smooth size size curve","code":""},{"path":"/reference/create_calibration_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Calibration Curve — create_calibration_curve","text":"","code":"if (FALSE) { create_calibration_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome, type = \"discrete\" )  create_calibration_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome, type = \"discrete\",   interactive = TRUE )   create_calibration_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome, type = \"smooth\" )  create_calibration_curve(   probs = list(example_dat$estimated_probabilities),   real = example_dat$outcome, type = \"smooth\",   interactive = TRUE )  # Several Models  create_calibration_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome, type = \"discrete\" )   create_calibration_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome,   interactive = TRUE,   type = \"discrete\" )   create_calibration_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome,   interactive = FALSE,   type = \"smooth\" )  create_calibration_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess,     \"Third Model\" = sample(example_dat$random_guess, replace = TRUE)   ),   real = example_dat$outcome,   interactive = TRUE,   type = \"smooth\" )   create_calibration_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess,     \"Third Model\" = sample(example_dat$random_guess, replace = TRUE),     \"Fourth Model\" = sample(example_dat$random_guess, replace = TRUE),     \"Fifth Model\" = sample(example_dat$random_guess, replace = TRUE)   ),   real = example_dat$outcome, type = \"smooth\",   interactive = TRUE )   # several populations   create_calibration_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ) )   create_calibration_curve(   probs = list(     \"Train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"Test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities),     \"Val\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities) %>%       sample(replace = TRUE)   ),   real = list(     \"Train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"Test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome),     \"Val\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ), interactive = TRUE, ) }"},{"path":"/reference/create_color_reference_lines_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating color reference lines vector — create_color_reference_lines_vector","title":"Creating color reference lines vector — create_color_reference_lines_vector","text":"Creating color reference lines vector","code":""},{"path":"/reference/create_color_reference_lines_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating color reference lines vector — create_color_reference_lines_vector","text":"","code":"create_color_reference_lines_vector(color_populations_vector, curve)"},{"path":"/reference/create_color_reference_lines_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating color reference lines vector — create_color_reference_lines_vector","text":"color_populations_vector color population vector curve curve","code":""},{"path":"/reference/create_conf_mat_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list of confusion matrices — create_conf_mat_list","title":"Create a list of confusion matrices — create_conf_mat_list","text":"Create list confusion matrices","code":""},{"path":"/reference/create_conf_mat_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list of confusion matrices — create_conf_mat_list","text":"","code":"create_conf_mat_list(performance_table, main_slider = \"threshold\")"},{"path":"/reference/create_conf_mat_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list of confusion matrices — create_conf_mat_list","text":"main_slider main slider - threshold, percent positives positives","code":""},{"path":"/reference/create_conf_mat_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list of confusion matrices — create_conf_mat_list","text":"","code":"if (FALSE) { one_pop_one_model_as_a_vector %>%   create_conf_mat_list()  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   create_conf_mat_list(main_slider = \"ppcr\")  one_pop_one_model_as_a_list %>%   create_conf_mat_list()  one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   create_conf_mat_list(main_slider = \"ppcr\")  one_pop_three_models %>%   create_conf_mat_list()  one_pop_three_models_enforced_percentiles_symmetry %>%   create_conf_mat_list(main_slider = \"ppcr\")  train_and_test_sets %>%   create_conf_mat_list()  train_and_test_sets_enforced_percentiles_symmetry %>%   create_conf_mat_list(main_slider = \"ppcr\")  one_pop_one_model_as_a_vector %>%   create_conf_mat_list()  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   create_conf_mat_list(main_slider = \"ppcr\") }"},{"path":"/reference/create_dat_for_smooth_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating dat for smooth calibration — create_dat_for_smooth_calibration","title":"Creating dat for smooth calibration — create_dat_for_smooth_calibration","text":"Arrange estimated probabilities long format","code":""},{"path":"/reference/create_dat_for_smooth_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating dat for smooth calibration — create_dat_for_smooth_calibration","text":"","code":"create_dat_for_smooth_calibration(probs, real, deciles_dat)"},{"path":"/reference/create_dat_for_smooth_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating dat for smooth calibration — create_dat_for_smooth_calibration","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) deciles_dat data deciles","code":""},{"path":"/reference/create_dat_for_smooth_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating dat for smooth calibration — create_dat_for_smooth_calibration","text":"","code":"if (FALSE) { # several models deciles_dat <- purrr::map_df(list(   \"Model 1\" = example_dat$estimated_probabilities ), ~ make_deciles_dat(.x, example_dat$outcome), .id = \"model\" ) %>%   mutate(model = forcats::fct_inorder(factor(model)))  create_dat_for_smooth_calibration(   list(\"Model 1\" = example_dat$estimated_probabilities),   real = example_dat$outcome,   deciles_dat )  # several populations  deciles_dat <- purrr::map2_dfr(list(   \"train\" = example_dat %>%     dplyr::filter(type_of_set == \"train\") %>%     dplyr::pull(estimated_probabilities),   \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%     dplyr::pull(estimated_probabilities) ), list(   \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%     dplyr::pull(outcome),   \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%     dplyr::pull(outcome) ), ~ make_deciles_dat(.x, .y), .id = \"population\" ) %>%   mutate(population = forcats::fct_inorder(factor(population)))  create_dat_for_smooth_calibration(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ),   deciles_dat ) }"},{"path":"/reference/create_decision_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision Curve — create_decision_curve","title":"Decision Curve — create_decision_curve","text":"Create decision Curve","code":""},{"path":"/reference/create_decision_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decision Curve — create_decision_curve","text":"","code":"create_decision_curve(   probs,   real,   by = 0.01,   stratified_by = \"probability_threshold\",   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   size = NULL )"},{"path":"/reference/create_decision_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decision Curve — create_decision_curve","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) number: increment sequence. stratified_by Performance Metrics can stratified Probability Threshold alternatively Predicted Positives Condition Rate chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette size size curve","code":""},{"path":"/reference/create_decision_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decision Curve — create_decision_curve","text":"","code":"create_decision_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome ) #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   create_decision_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome ) #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).   create_decision_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ) ) #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).  if (FALSE) {  create_decision_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome,   interactive = TRUE )  create_decision_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome,   interactive = TRUE )  create_decision_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ),   interactive = TRUE ) }"},{"path":"/reference/create_gains_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Gains Curve — create_gains_curve","title":"Gains Curve — create_gains_curve","text":"Create Gains Curve","code":""},{"path":"/reference/create_gains_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gains Curve — create_gains_curve","text":"","code":"create_gains_curve(   probs,   real,   by = 0.01,   stratified_by = \"probability_threshold\",   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   size = NULL )"},{"path":"/reference/create_gains_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gains Curve — create_gains_curve","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) number: increment sequence. stratified_by Performance Metrics can stratified Probability Threshold alternatively Predicted Positives Condition Rate chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette size size curve","code":""},{"path":"/reference/create_gains_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gains Curve — create_gains_curve","text":"","code":"create_gains_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome )   create_gains_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome )   create_gains_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ) )  if (FALSE) {  create_gains_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome,   interactive = TRUE )  create_gains_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome,   interactive = TRUE )  create_gains_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ),   interactive = TRUE ) }"},{"path":"/reference/create_ggplot_for_performance_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ggplot for Performance Metrics — create_ggplot_for_performance_metrics","title":"Create ggplot for Performance Metrics — create_ggplot_for_performance_metrics","text":"Makes ggplot metrices","code":""},{"path":"/reference/create_ggplot_for_performance_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ggplot for Performance Metrics — create_ggplot_for_performance_metrics","text":"","code":"create_ggplot_for_performance_metrics(   performance_data,   x_perf_metric,   y_perf_metric,   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\") )"},{"path":"/reference/create_ggplot_for_performance_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ggplot for Performance Metrics — create_ggplot_for_performance_metrics","text":"performance_data rtichoke Performance Data x_perf_metric performance metrice x axis y_perf_metric performance metrice y axis col_values color palette","code":""},{"path":"/reference/create_lift_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Lift Curve — create_lift_curve","title":"Lift Curve — create_lift_curve","text":"Create Lift Curve","code":""},{"path":"/reference/create_lift_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lift Curve — create_lift_curve","text":"","code":"create_lift_curve(   probs,   real,   by = 0.01,   stratified_by = \"probability_threshold\",   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   size = NULL )"},{"path":"/reference/create_lift_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lift Curve — create_lift_curve","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) number: increment sequence. stratified_by Performance Metrics can stratified Probability Threshold alternatively Predicted Positives Condition Rate chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette size size curve","code":""},{"path":"/reference/create_lift_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lift Curve — create_lift_curve","text":"","code":"create_lift_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome ) #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   create_lift_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome ) #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).   create_lift_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ) ) #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).  if (FALSE) {  create_lift_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome,   interactive = TRUE )  create_lift_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome,   interactive = TRUE )  create_lift_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ),   interactive = TRUE ) }"},{"path":"/reference/create_linetype_reference_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating linetype reference lines vector — create_linetype_reference_vector","title":"Creating linetype reference lines vector — create_linetype_reference_vector","text":"Creating linetype reference lines vector","code":""},{"path":"/reference/create_linetype_reference_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating linetype reference lines vector — create_linetype_reference_vector","text":"","code":"create_linetype_reference_vector(color_populations_vector, curve)"},{"path":"/reference/create_linetype_reference_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating linetype reference lines vector — create_linetype_reference_vector","text":"color_populations_vector color population vector curve curve","code":""},{"path":"/reference/create_performance_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Performance Table — create_performance_table","title":"Performance Table — create_performance_table","text":"Create Performance Table","code":""},{"path":"/reference/create_performance_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performance Table — create_performance_table","text":"","code":"create_performance_table(   probs,   real,   by = 0.01,   stratified_by = \"probability_threshold\",   output_type = \"reactable\" )"},{"path":"/reference/create_performance_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performance Table — create_performance_table","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) number: increment sequence. stratified_by Performance Metrics can stratified Probability Threshold alternatively Predicted Positives Condition Rate output_type type output table, gt default","code":""},{"path":"/reference/create_plotly_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Create basic plotly for Performance Metrics — create_plotly_base","title":"Create basic plotly for Performance Metrics — create_plotly_base","text":"Makes basic plotly metrices","code":""},{"path":"/reference/create_plotly_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create basic plotly for Performance Metrics — create_plotly_base","text":"","code":"create_plotly_base(   performance_data,   x_perf_metric,   y_perf_metric,   performance_data_type = \"one model\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   height = size,   width = size )"},{"path":"/reference/create_plotly_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create basic plotly for Performance Metrics — create_plotly_base","text":"performance_data rtichoke Performance Data x_perf_metric performance metrice x axis y_perf_metric performance metrice y axis performance_data_type type Performance Data col_values palette","code":""},{"path":"/reference/create_plotly_for_performance_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plotly for Performance Metrics — create_plotly_for_performance_metrics","title":"Create plotly for Performance Metrics — create_plotly_for_performance_metrics","text":"Makes plotly Performance Metrics","code":""},{"path":"/reference/create_plotly_for_performance_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plotly for Performance Metrics — create_plotly_for_performance_metrics","text":"","code":"create_plotly_for_performance_metrics(   performance_data,   x_perf_metric,   y_perf_metric,   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   main_slider = \"threshold\",   reference_lines = NA )"},{"path":"/reference/create_plotly_for_performance_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plotly for Performance Metrics — create_plotly_for_performance_metrics","text":"performance_data rtichoke Performance Data x_perf_metric performance metrice x axis y_perf_metric performance metrice y axis col_values color palette main_slider main slider - threshold, percent positives positives reference_lines list reference lines","code":""},{"path":"/reference/create_precision_recall_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Precision Recall Curve — create_precision_recall_curve","title":"Precision Recall Curve — create_precision_recall_curve","text":"Create Precision Recall Curve","code":""},{"path":"/reference/create_precision_recall_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precision Recall Curve — create_precision_recall_curve","text":"","code":"create_precision_recall_curve(   probs,   real,   by = 0.01,   stratified_by = \"probability_threshold\",   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   size = NULL )"},{"path":"/reference/create_precision_recall_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precision Recall Curve — create_precision_recall_curve","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) number: increment sequence. stratified_by Performance Metrics can stratified Probability Threshold alternatively Predicted Positives Condition Rate chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette size size curve","code":""},{"path":"/reference/create_precision_recall_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precision Recall Curve — create_precision_recall_curve","text":"","code":"create_precision_recall_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome ) #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   create_precision_recall_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome ) #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).   create_precision_recall_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ) ) #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).  if (FALSE) {  create_precision_recall_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome,   interactive = TRUE )  create_precision_recall_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome,   interactive = TRUE )  create_precision_recall_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ),   interactive = TRUE ) }"},{"path":"/reference/create_reference_lines_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Reference Lines Data Frame — create_reference_lines_data_frame","title":"Creating Reference Lines Data Frame — create_reference_lines_data_frame","text":"Creating Reference Lines Data Frame","code":""},{"path":"/reference/create_reference_lines_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Reference Lines Data Frame — create_reference_lines_data_frame","text":"","code":"create_reference_lines_data_frame(   curve,   prevalence = NA,   color = NA,   plotly = FALSE,   multiple_pop = FALSE )"},{"path":"/reference/create_reference_lines_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Reference Lines Data Frame — create_reference_lines_data_frame","text":"curve specified curve reference lines prevalence prevalence outcome color required color plotly reference lines data frame competible plotly multiple_pop reference lines data frame adjusted multiple populations","code":""},{"path":"/reference/create_reference_lines_for_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Create reference lines plotly as the first stage of interactive plot — create_reference_lines_for_plotly","title":"Create reference lines plotly as the first stage of interactive plot — create_reference_lines_for_plotly","text":"Create reference lines plotly first stage interactive plot","code":""},{"path":"/reference/create_reference_lines_for_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create reference lines plotly as the first stage of interactive plot — create_reference_lines_for_plotly","text":"","code":"create_reference_lines_for_plotly(   performance_table_type,   curve,   prevalence = NA,   population_color_vector = NA,   size = NULL )"},{"path":"/reference/create_reference_lines_for_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create reference lines plotly as the first stage of interactive plot — create_reference_lines_for_plotly","text":"performance_table_type type performance table curve required curve prevalence prevalence population population_color_vector color values size size curve","code":""},{"path":"/reference/create_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"ROC Curve — create_roc_curve","title":"ROC Curve — create_roc_curve","text":"Create ROC Curve","code":""},{"path":"/reference/create_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ROC Curve — create_roc_curve","text":"","code":"create_roc_curve(   probs,   real,   by = 0.01,   stratified_by = \"probability_threshold\",   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   title_included = FALSE,   size = NULL )"},{"path":"/reference/create_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ROC Curve — create_roc_curve","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) number: increment sequence. stratified_by Performance Metrics can stratified Probability Threshold alternatively Predicted Positives Condition Rate chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette title_included add title curve size size curve","code":""},{"path":"/reference/create_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ROC Curve — create_roc_curve","text":"","code":"create_roc_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome )   create_roc_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome )   create_roc_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ) )  if (FALSE) {  create_roc_curve(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome,   interactive = TRUE )  create_roc_curve(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome,   interactive = TRUE )  create_roc_curve(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ),   interactive = TRUE ) }"},{"path":"/reference/create_subtitle_for_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating subtitle for ggplot2 — create_subtitle_for_ggplot","title":"Creating subtitle for ggplot2 — create_subtitle_for_ggplot","text":"Creating subtitle ggplot2","code":""},{"path":"/reference/create_subtitle_for_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating subtitle for ggplot2 — create_subtitle_for_ggplot","text":"","code":"create_subtitle_for_ggplot(   probs_names,   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\") )"},{"path":"/reference/create_subtitle_for_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating subtitle for ggplot2 — create_subtitle_for_ggplot","text":"probs_names names probs col_values color palette","code":""},{"path":"/reference/create_subtitle_for_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating subtitle for ggplot2 — create_subtitle_for_ggplot","text":"","code":"if (FALSE) { create_subtitle_for_ggplot(   probs_names = c(     \"First Model\", \"Second Model\", \"Third Model\"   ) ) }"},{"path":"/reference/create_subtitle_for_one_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Subtitle for One Population — create_subtitle_for_one_population","title":"Creating Subtitle for One Population — create_subtitle_for_one_population","text":"Creating Subtitle One Population","code":""},{"path":"/reference/create_subtitle_for_one_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Subtitle for One Population — create_subtitle_for_one_population","text":"","code":"create_subtitle_for_one_population(pop_name, pop_color, pop_prevalence)"},{"path":"/reference/create_subtitle_for_one_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Subtitle for One Population — create_subtitle_for_one_population","text":"pop_name name population pop_color color population pop_prevalence prevalence population","code":""},{"path":"/reference/create_summary_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary report — create_summary_report","title":"Create a summary report — create_summary_report","text":"Create summary report","code":""},{"path":"/reference/create_summary_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary report — create_summary_report","text":"","code":"create_summary_report(   probs,   real,   interactive = FALSE,   output_file = \"summary_report.html\",   output_dir = getwd() )"},{"path":"/reference/create_summary_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary report — create_summary_report","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) interactive whether plot interactive plots output_file name output file output_dir output directory rendered output_file. allows choice alternate directory output file written (default output directory input file). path provided filename output_file directory specified take precedence. Please note directory path provided create necessary directories exist.","code":""},{"path":[]},{"path":"/reference/create_summary_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary report — create_summary_report","text":"","code":"if (FALSE) { create_summary_report(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome )  create_summary_report(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome )  create_summary_report(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ) )  create_summary_report(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome,   interactive = TRUE )  create_summary_report(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome,   interactive = TRUE )  create_summary_report(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ),   interactive = TRUE ) }"},{"path":"/reference/create_table_for_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Table for AUC — create_table_for_auc","title":"Create Table for AUC — create_table_for_auc","text":"Create Table AUC","code":""},{"path":"/reference/create_table_for_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Table for AUC — create_table_for_auc","text":"","code":"create_table_for_auc(probs, real)"},{"path":"/reference/create_table_for_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Table for AUC — create_table_for_auc","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population)","code":""},{"path":"/reference/create_table_for_prevalence.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data for Prevalence — create_table_for_prevalence","title":"Create Data for Prevalence — create_table_for_prevalence","text":"Create Data Prevalence","code":""},{"path":"/reference/create_table_for_prevalence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data for Prevalence — create_table_for_prevalence","text":"","code":"create_table_for_prevalence(performance_data)"},{"path":"/reference/create_table_for_prevalence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data for Prevalence — create_table_for_prevalence","text":"performance_data rtichoke Performance Data","code":""},{"path":"/reference/create_text_for_hover.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating text to hover — create_text_for_hover","title":"Creating text to hover — create_text_for_hover","text":"Creating text hover","code":""},{"path":"/reference/create_text_for_hover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating text to hover — create_text_for_hover","text":"","code":"create_text_for_hover(performance_data_type, curve)"},{"path":"/reference/create_text_for_hover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating text to hover — create_text_for_hover","text":"performance_data_type performance data type curve curve type","code":""},{"path":"/reference/creating_subtitle_for_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Subtitle for gt performance table — creating_subtitle_for_gt","title":"Creating Subtitle for gt performance table — creating_subtitle_for_gt","text":"Creating Subtitle gt performance table","code":""},{"path":"/reference/creating_subtitle_for_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Subtitle for gt performance table — creating_subtitle_for_gt","text":"","code":"creating_subtitle_for_gt(perf_dat_type, col_values = NA, prevalence = NA)"},{"path":"/reference/creating_subtitle_for_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Subtitle for gt performance table — creating_subtitle_for_gt","text":"col_values color palette models_names names different models","code":""},{"path":"/reference/creating_title_for_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating Title for gt performance table — creating_title_for_gt","title":"Creating Title for gt performance table — creating_title_for_gt","text":"Creating Title gt performance table","code":""},{"path":"/reference/creating_title_for_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating Title for gt performance table — creating_title_for_gt","text":"","code":"creating_title_for_gt(main_slider)"},{"path":"/reference/creating_title_for_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating Title for gt performance table — creating_title_for_gt","text":"main_slider main slider - threshold, percent positives positives","code":""},{"path":"/reference/define_limits_for_calibration_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Define limits for Calibration Curve — define_limits_for_calibration_plot","title":"Define limits for Calibration Curve — define_limits_for_calibration_plot","text":"Define limits Calibration Curve","code":""},{"path":"/reference/define_limits_for_calibration_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define limits for Calibration Curve — define_limits_for_calibration_plot","text":"","code":"define_limits_for_calibration_plot(deciles_dat)"},{"path":"/reference/define_limits_for_calibration_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define limits for Calibration Curve — define_limits_for_calibration_plot","text":"deciles_dat","code":""},{"path":"/reference/define_limits_for_calibration_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define limits for Calibration Curve — define_limits_for_calibration_plot","text":"","code":"if (FALSE) { make_deciles_dat(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome ) %>%   define_limits_for_calibration_plot() }"},{"path":"/reference/example_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Data Frame for rtichoke package — example_dat","title":"Example Data Frame for rtichoke package — example_dat","text":"example data frame contains estimated probabilities binary outcomes, used input rtichoke functions.","code":""},{"path":"/reference/example_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Data Frame for rtichoke package — example_dat","text":"","code":"example_dat"},{"path":"/reference/example_dat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Data Frame for rtichoke package — example_dat","text":"data frame 53940 rows 10 variables: estimated_probabilities estimated probabilities model bad_model estimated probabilities bad model random_guess random guesses generated unifrom distribution outcome binary outcome type_of_set type set observation belongs ","code":""},{"path":"/reference/get_n_from_performance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"n — get_n_from_performance_data","title":"n — get_n_from_performance_data","text":"Get prevalence Performance Data","code":""},{"path":"/reference/get_n_from_performance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"n — get_n_from_performance_data","text":"","code":"get_n_from_performance_data(   performance_data,   performance_data_type = \"not important\" )"},{"path":"/reference/get_n_from_performance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"n — get_n_from_performance_data","text":"performance_data rtichoke Performance Data performance_data_type type Performance Data","code":""},{"path":"/reference/get_prevalence_from_performance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"prevalence — get_prevalence_from_performance_data","title":"prevalence — get_prevalence_from_performance_data","text":"Get prevalence Performance Data","code":""},{"path":"/reference/get_prevalence_from_performance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prevalence — get_prevalence_from_performance_data","text":"","code":"get_prevalence_from_performance_data(   performance_data,   performance_data_type = \"not important\" )"},{"path":"/reference/get_prevalence_from_performance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prevalence — get_prevalence_from_performance_data","text":"performance_data rtichoke Performance Data performance_data_type type Performance Data","code":""},{"path":"/reference/get_real_positives_from_performance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Real Positives — get_real_positives_from_performance_data","title":"Real Positives — get_real_positives_from_performance_data","text":"Get real positives Performance Data","code":""},{"path":"/reference/get_real_positives_from_performance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real Positives — get_real_positives_from_performance_data","text":"","code":"get_real_positives_from_performance_data(   performance_data,   performance_data_type = \"not important\" )"},{"path":"/reference/get_real_positives_from_performance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Real Positives — get_real_positives_from_performance_data","text":"performance_data rtichoke Performance Data performance_data_type type Performance Data","code":""},{"path":"/reference/make_deciles_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Make deciles dataframe — make_deciles_dat","title":"Make deciles dataframe — make_deciles_dat","text":"Make deciles dataframe","code":""},{"path":"/reference/make_deciles_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make deciles dataframe — make_deciles_dat","text":"","code":"make_deciles_dat(probs, real)"},{"path":"/reference/make_deciles_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make deciles dataframe — make_deciles_dat","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population)","code":""},{"path":"/reference/make_deciles_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make deciles dataframe — make_deciles_dat","text":"","code":"if (FALSE) { make_deciles_dat(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome ) }"},{"path":"/reference/make_histogram_for_calibration.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating dat for histogram calibration — make_histogram_for_calibration","title":"Creating dat for histogram calibration — make_histogram_for_calibration","text":"Creating dat histogram calibration","code":""},{"path":"/reference/make_histogram_for_calibration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating dat for histogram calibration — make_histogram_for_calibration","text":"","code":"make_histogram_for_calibration(probs, deciles_dat)"},{"path":"/reference/make_histogram_for_calibration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating dat for histogram calibration — make_histogram_for_calibration","text":"probs vector estimated probabilities list vectors kind (one model) deciles_dat data deciles","code":""},{"path":"/reference/make_histogram_for_calibration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creating dat for histogram calibration — make_histogram_for_calibration","text":"","code":"if (FALSE) { # several models deciles_dat <- purrr::map_df(list(   \"Model 1\" = example_dat$estimated_probabilities ), ~ make_deciles_dat(.x, example_dat$outcome), .id = \"model\" ) %>%   mutate(model = forcats::fct_inorder(factor(model)))  make_histogram_for_calibration(   list(\"Model 1\" = example_dat$estimated_probabilities),   deciles_dat )  # several populations  deciles_dat <- purrr::map2_dfr(list(   \"train\" = example_dat %>%     dplyr::filter(type_of_set == \"train\") %>%     dplyr::pull(estimated_probabilities),   \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%     dplyr::pull(estimated_probabilities) ), list(   \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%     dplyr::pull(outcome),   \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%     dplyr::pull(outcome) ), ~ make_deciles_dat(.x, .y), .id = \"population\" ) %>%   mutate(population = forcats::fct_inorder(factor(population)))  make_histogram_for_calibration(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   deciles_dat ) }"},{"path":"/reference/make_performance_metric_bold.html","id":null,"dir":"Reference","previous_headings":"","what":"Making performance metric bold — make_performance_metric_bold","title":"Making performance metric bold — make_performance_metric_bold","text":"Making performance metric bold","code":""},{"path":"/reference/make_performance_metric_bold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Making performance metric bold — make_performance_metric_bold","text":"","code":"make_performance_metric_bold(hover_text, performance_metric)"},{"path":"/reference/make_performance_metric_bold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Making performance metric bold — make_performance_metric_bold","text":"hover_text text performance_metric perf","code":""},{"path":"/reference/make_performance_metrics_bold.html","id":null,"dir":"Reference","previous_headings":"","what":"Making performance metrics bold — make_performance_metrics_bold","title":"Making performance metrics bold — make_performance_metrics_bold","text":"Making performance metrics bold","code":""},{"path":"/reference/make_performance_metrics_bold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Making performance metrics bold — make_performance_metrics_bold","text":"","code":"make_performance_metrics_bold(text_for_hover, curve)"},{"path":"/reference/make_performance_metrics_bold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Making performance metrics bold — make_performance_metrics_bold","text":"text_for_hover text curve curve type","code":""},{"path":"/reference/make_two_performance_metrics_bold.html","id":null,"dir":"Reference","previous_headings":"","what":"Making two performance metrics bold — make_two_performance_metrics_bold","title":"Making two performance metrics bold — make_two_performance_metrics_bold","text":"Making two performance metrics bold","code":""},{"path":"/reference/make_two_performance_metrics_bold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Making two performance metrics bold — make_two_performance_metrics_bold","text":"","code":"make_two_performance_metrics_bold(   text_for_hover,   performance_metric_x,   performance_metric_y )"},{"path":"/reference/make_two_performance_metrics_bold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Making two performance metrics bold — make_two_performance_metrics_bold","text":"text_for_hover text performance_metric_x x performance_metric_y y","code":""},{"path":"/reference/one_pop_one_model_as_a_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Data — one_pop_one_model_as_a_list","title":"Example Performance Data — one_pop_one_model_as_a_list","text":"example Performance Data contains one model","code":""},{"path":"/reference/one_pop_one_model_as_a_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Data — one_pop_one_model_as_a_list","text":"","code":"one_pop_one_model_as_a_list"},{"path":"/reference/one_pop_one_model_as_a_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Performance Data — one_pop_one_model_as_a_list","text":"data frame 101 rows 15 variables:","code":""},{"path":"/reference/one_pop_one_model_as_a_list_enforced_percentiles_symmetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Data — one_pop_one_model_as_a_list_enforced_percentiles_symmetry","title":"Example Performance Data — one_pop_one_model_as_a_list_enforced_percentiles_symmetry","text":"example Performance Data contains one model","code":""},{"path":"/reference/one_pop_one_model_as_a_list_enforced_percentiles_symmetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Data — one_pop_one_model_as_a_list_enforced_percentiles_symmetry","text":"","code":"one_pop_one_model_as_a_list_enforced_percentiles_symmetry"},{"path":"/reference/one_pop_one_model_as_a_list_enforced_percentiles_symmetry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Performance Data — one_pop_one_model_as_a_list_enforced_percentiles_symmetry","text":"data frame 101 rows 15 variables:","code":""},{"path":"/reference/one_pop_one_model_as_a_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Data — one_pop_one_model_as_a_vector","title":"Example Performance Data — one_pop_one_model_as_a_vector","text":"example Performance Data contains one model","code":""},{"path":"/reference/one_pop_one_model_as_a_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Data — one_pop_one_model_as_a_vector","text":"","code":"one_pop_one_model_as_a_vector"},{"path":"/reference/one_pop_one_model_as_a_vector.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Performance Data — one_pop_one_model_as_a_vector","text":"data frame 101 rows 14 variables:","code":""},{"path":"/reference/one_pop_one_model_as_a_vector_enforced_percentiles_symmetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Data — one_pop_one_model_as_a_vector_enforced_percentiles_symmetry","title":"Example Performance Data — one_pop_one_model_as_a_vector_enforced_percentiles_symmetry","text":"example Performance Data contains one model","code":""},{"path":"/reference/one_pop_one_model_as_a_vector_enforced_percentiles_symmetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Data — one_pop_one_model_as_a_vector_enforced_percentiles_symmetry","text":"","code":"one_pop_one_model_as_a_vector_enforced_percentiles_symmetry"},{"path":"/reference/one_pop_one_model_as_a_vector_enforced_percentiles_symmetry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Performance Data — one_pop_one_model_as_a_vector_enforced_percentiles_symmetry","text":"data frame 101 rows 14 variables:","code":""},{"path":"/reference/one_pop_three_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Data — one_pop_three_models","title":"Example Performance Data — one_pop_three_models","text":"example Performance Data contains three models","code":""},{"path":"/reference/one_pop_three_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Data — one_pop_three_models","text":"","code":"one_pop_three_models"},{"path":"/reference/one_pop_three_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Performance Data — one_pop_three_models","text":"data frame 303 rows 15 variables:","code":""},{"path":"/reference/one_pop_three_models_enforced_percentiles_symmetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Data — one_pop_three_models_enforced_percentiles_symmetry","title":"Example Performance Data — one_pop_three_models_enforced_percentiles_symmetry","text":"example Performance Data contains three models","code":""},{"path":"/reference/one_pop_three_models_enforced_percentiles_symmetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Data — one_pop_three_models_enforced_percentiles_symmetry","text":"","code":"one_pop_three_models_enforced_percentiles_symmetry"},{"path":"/reference/one_pop_three_models_enforced_percentiles_symmetry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Performance Data — one_pop_three_models_enforced_percentiles_symmetry","text":"data frame 303 rows 15 variables:","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/plot_decision_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Decision Curve from Performance Data — plot_decision_curve","title":"Decision Curve from Performance Data — plot_decision_curve","text":"Plot Precision decision Curve","code":""},{"path":"/reference/plot_decision_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decision Curve from Performance Data — plot_decision_curve","text":"","code":"plot_decision_curve(   performance_data,   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   size = NULL )"},{"path":"/reference/plot_decision_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decision Curve from Performance Data — plot_decision_curve","text":"performance_data rtichoke Performance Data chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette size size curve","code":""},{"path":"/reference/plot_decision_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decision Curve from Performance Data — plot_decision_curve","text":"","code":"one_pop_one_model_as_a_vector %>%   plot_decision_curve() #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_decision_curve(main_slider = \"ppcr\")   one_pop_one_model_as_a_list %>%   plot_decision_curve() #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_decision_curve(main_slider = \"ppcr\")   one_pop_three_models %>%   plot_decision_curve() #> Warning: Removed 3 rows containing missing values (geom_point). #> Warning: Removed 3 row(s) containing missing values (geom_path).   one_pop_three_models_enforced_percentiles_symmetry %>%   plot_decision_curve(main_slider = \"ppcr\")   train_and_test_sets %>%   plot_decision_curve() #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).   train_and_test_sets_enforced_percentiles_symmetry %>%   plot_decision_curve(main_slider = \"ppcr\")  if (FALSE) {  one_pop_one_model_as_a_vector %>%   plot_decision_curve(interactive = TRUE)  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_decision_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_one_model_as_a_list %>%   plot_decision_curve(interactive = TRUE)  one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_decision_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_three_models %>%   plot_decision_curve(interactive = TRUE)  one_pop_three_models_enforced_percentiles_symmetry %>%   plot_decision_curve(interactive = TRUE, main_slider = \"ppcr\")  train_and_test_sets %>%   plot_decision_curve(interactive = TRUE)  train_and_test_sets_enforced_percentiles_symmetry %>%   plot_decision_curve(interactive = TRUE, main_slider = \"ppcr\") }"},{"path":"/reference/plot_gains_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Gains Curve from Performance Data — plot_gains_curve","title":"Gains Curve from Performance Data — plot_gains_curve","text":"Plot Gains Curve","code":""},{"path":"/reference/plot_gains_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gains Curve from Performance Data — plot_gains_curve","text":"","code":"plot_gains_curve(   performance_data,   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   size = NULL )"},{"path":"/reference/plot_gains_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gains Curve from Performance Data — plot_gains_curve","text":"performance_data rtichoke Performance Data chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette size size curve","code":""},{"path":"/reference/plot_gains_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gains Curve from Performance Data — plot_gains_curve","text":"","code":"one_pop_one_model_as_a_vector %>%   plot_gains_curve()   one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_gains_curve(main_slider = \"ppcr\")   one_pop_one_model_as_a_list %>%   plot_gains_curve()   one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_gains_curve(main_slider = \"ppcr\")   one_pop_three_models %>%   plot_gains_curve()   one_pop_three_models_enforced_percentiles_symmetry %>%   plot_gains_curve(main_slider = \"ppcr\")   train_and_test_sets %>%   plot_gains_curve()   train_and_test_sets_enforced_percentiles_symmetry %>%   plot_gains_curve(main_slider = \"ppcr\")  if (FALSE) {  one_pop_one_model_as_a_vector %>%   plot_gains_curve(interactive = TRUE)  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_gains_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_one_model_as_a_list %>%   plot_gains_curve(interactive = TRUE)  one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_gains_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_three_models %>%   plot_gains_curve(interactive = TRUE)  one_pop_three_models_enforced_percentiles_symmetry %>%   plot_gains_curve(interactive = TRUE, main_slider = \"ppcr\")  train_and_test_sets %>%   plot_gains_curve(interactive = TRUE)  train_and_test_sets_enforced_percentiles_symmetry %>%   plot_gains_curve(interactive = TRUE, main_slider = \"ppcr\") }"},{"path":"/reference/plot_lift_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"LIFT Curve from Performance Data — plot_lift_curve","title":"LIFT Curve from Performance Data — plot_lift_curve","text":"Plot LIFT Curve","code":""},{"path":"/reference/plot_lift_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LIFT Curve from Performance Data — plot_lift_curve","text":"","code":"plot_lift_curve(   performance_data,   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   size = NULL )"},{"path":"/reference/plot_lift_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LIFT Curve from Performance Data — plot_lift_curve","text":"performance_data rtichoke Performance Data chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette size size curve","code":""},{"path":"/reference/plot_lift_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LIFT Curve from Performance Data — plot_lift_curve","text":"","code":"one_pop_one_model_as_a_vector %>%   plot_lift_curve() #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_lift_curve(main_slider = \"ppcr\") #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_one_model_as_a_list %>%   plot_lift_curve() #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_lift_curve(main_slider = \"ppcr\") #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_three_models %>%   plot_lift_curve() #> Warning: Removed 6 rows containing missing values (geom_point). #> Warning: Removed 6 row(s) containing missing values (geom_path).   one_pop_three_models_enforced_percentiles_symmetry %>%   plot_lift_curve(main_slider = \"ppcr\") #> Warning: Removed 3 rows containing missing values (geom_point). #> Warning: Removed 3 row(s) containing missing values (geom_path).   train_and_test_sets %>%   plot_lift_curve() #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).   train_and_test_sets_enforced_percentiles_symmetry %>%   plot_lift_curve(main_slider = \"ppcr\") #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).  if (FALSE) {  one_pop_one_model_as_a_vector %>%   plot_lift_curve(interactive = TRUE)  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_lift_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_one_model_as_a_list %>%   plot_lift_curve(interactive = TRUE)  one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_lift_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_three_models %>%   plot_lift_curve(interactive = TRUE)  one_pop_three_models_enforced_percentiles_symmetry %>%   plot_lift_curve(interactive = TRUE, main_slider = \"ppcr\")  train_and_test_sets %>%   plot_lift_curve(interactive = TRUE)  train_and_test_sets_enforced_percentiles_symmetry %>%   plot_lift_curve(interactive = TRUE, main_slider = \"ppcr\") }"},{"path":"/reference/plot_precision_recall_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Precision Recall Curve from Performance Data — plot_precision_recall_curve","title":"Precision Recall Curve from Performance Data — plot_precision_recall_curve","text":"Plot Precision Recall Curve","code":""},{"path":"/reference/plot_precision_recall_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precision Recall Curve from Performance Data — plot_precision_recall_curve","text":"","code":"plot_precision_recall_curve(   performance_data,   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   size = NULL )"},{"path":"/reference/plot_precision_recall_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precision Recall Curve from Performance Data — plot_precision_recall_curve","text":"performance_data rtichoke Performance Data chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette size size curve","code":""},{"path":"/reference/plot_precision_recall_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precision Recall Curve from Performance Data — plot_precision_recall_curve","text":"","code":"one_pop_one_model_as_a_vector %>%   plot_precision_recall_curve() #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_precision_recall_curve(main_slider = \"ppcr\") #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_one_model_as_a_list %>%   plot_precision_recall_curve() #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_precision_recall_curve(main_slider = \"ppcr\") #> Warning: Removed 1 rows containing missing values (geom_point). #> Warning: Removed 1 row(s) containing missing values (geom_path).   one_pop_three_models %>%   plot_precision_recall_curve() #> Warning: Removed 6 rows containing missing values (geom_point). #> Warning: Removed 6 row(s) containing missing values (geom_path).   one_pop_three_models_enforced_percentiles_symmetry %>%   plot_precision_recall_curve(main_slider = \"ppcr\") #> Warning: Removed 3 rows containing missing values (geom_point). #> Warning: Removed 3 row(s) containing missing values (geom_path).   train_and_test_sets %>%   plot_precision_recall_curve() #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).   train_and_test_sets_enforced_percentiles_symmetry %>%   plot_precision_recall_curve(main_slider = \"ppcr\") #> Warning: Removed 2 rows containing missing values (geom_point). #> Warning: Removed 2 row(s) containing missing values (geom_path).  if (FALSE) {  one_pop_one_model_as_a_vector %>%   plot_precision_recall_curve(interactive = TRUE)  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_precision_recall_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_one_model_as_a_list %>%   plot_precision_recall_curve(interactive = TRUE)  one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_precision_recall_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_three_models %>%   plot_precision_recall_curve(interactive = TRUE)  one_pop_three_models_enforced_percentiles_symmetry %>%   plot_precision_recall_curve(interactive = TRUE, main_slider = \"ppcr\")  train_and_test_sets %>%   plot_precision_recall_curve(interactive = TRUE)  train_and_test_sets_enforced_percentiles_symmetry %>%   plot_precision_recall_curve(interactive = TRUE, main_slider = \"ppcr\") }"},{"path":"/reference/plot_roc_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"ROC Curve from Performance Data — plot_roc_curve","title":"ROC Curve from Performance Data — plot_roc_curve","text":"Plot ROC Curve","code":""},{"path":"/reference/plot_roc_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ROC Curve from Performance Data — plot_roc_curve","text":"","code":"plot_roc_curve(   performance_data,   chosen_threshold = NA,   interactive = FALSE,   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\"),   title_included = FALSE,   size = NULL )"},{"path":"/reference/plot_roc_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ROC Curve from Performance Data — plot_roc_curve","text":"performance_data rtichoke Performance Data chosen_threshold chosen threshold display (non-interactive) interactive whether plot interactive plots main_slider main slider - threshold, percent positives positives col_values color palette title_included add title curve size size curve","code":""},{"path":"/reference/plot_roc_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ROC Curve from Performance Data — plot_roc_curve","text":"","code":"one_pop_one_model_as_a_vector %>%   plot_roc_curve()   one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_roc_curve(main_slider = \"ppcr\")   one_pop_one_model_as_a_list %>%   plot_roc_curve()   one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_roc_curve(main_slider = \"ppcr\")   one_pop_three_models %>%   plot_roc_curve()   one_pop_three_models_enforced_percentiles_symmetry %>%   plot_roc_curve(main_slider = \"ppcr\")   train_and_test_sets %>%   plot_roc_curve()   train_and_test_sets_enforced_percentiles_symmetry %>%   plot_roc_curve(main_slider = \"ppcr\")  if (FALSE) {  one_pop_one_model_as_a_vector %>%   plot_roc_curve(interactive = TRUE)  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   plot_roc_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_one_model_as_a_list %>%   plot_roc_curve(interactive = TRUE)  one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   plot_roc_curve(interactive = TRUE, main_slider = \"ppcr\")  one_pop_three_models %>%   plot_roc_curve(interactive = TRUE)  one_pop_three_models_enforced_percentiles_symmetry %>%   plot_roc_curve(interactive = TRUE, main_slider = \"ppcr\")  train_and_test_sets %>%   plot_roc_curve(interactive = TRUE)  train_and_test_sets_enforced_percentiles_symmetry %>%   plot_roc_curve(interactive = TRUE, main_slider = \"ppcr\") }"},{"path":"/reference/prepare_performance_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Performance Data — prepare_performance_data","title":"Prepare Performance Data — prepare_performance_data","text":"prepare_performance_data function makes Performance Data made different cutoffs. row represents cutoff column stands performance metric. possible use function one model order compare different models performance population. case user use list made vectors estimated probabilities, one model.","code":""},{"path":"/reference/prepare_performance_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Performance Data — prepare_performance_data","text":"","code":"prepare_performance_data(   probs,   real,   by = 0.01,   stratified_by = \"probability_threshold\" )"},{"path":"/reference/prepare_performance_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Performance Data — prepare_performance_data","text":"probs vector estimated probabilities list vectors kind (one model) real vector binary outcomes list vectors kind (one population) number: increment sequence. stratified_by Performance Metrics can stratified Probability Threshold alternatively Predicted Positives Condition Rate","code":""},{"path":"/reference/prepare_performance_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare Performance Data — prepare_performance_data","text":"Sometime instead using cutoff estimated probability required enforce symmetry percentiles probabilities, medicine referred \"Risk Percentile\" outcome stands something negative essence severe disease death: say want see model performance top 5% patients risk well defined population, case user change parameter stratified_by default \"probability_threshold\" \"predicted_positives\" results similar Performance Data, time row represent rounded percentile.","code":""},{"path":"/reference/prepare_performance_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Performance Data — prepare_performance_data","text":"","code":"# You can prepare Performance Data for one model  prepare_performance_data(   probs = example_dat$estimated_probabilities,   real = example_dat$outcome ) #> # A tibble: 101 × 14 #>    threshold    TP    TN    FN    FP sensitivity   FPR specificity   PPV   NPV #>        <dbl> <int> <int> <int> <int>       <dbl> <dbl>       <dbl> <dbl> <dbl> #>  1      0       50     0     0   100           1  1           0    0.333   NaN #>  2      0.01    50    51     0    49           1  0.49        0.51 0.505     1 #>  3      0.02    50    55     0    45           1  0.45        0.55 0.526     1 #>  4      0.03    50    61     0    39           1  0.39        0.61 0.562     1 #>  5      0.04    50    67     0    33           1  0.33        0.67 0.602     1 #>  6      0.05    50    67     0    33           1  0.33        0.67 0.602     1 #>  7      0.06    50    67     0    33           1  0.33        0.67 0.602     1 #>  8      0.07    50    70     0    30           1  0.3         0.7  0.625     1 #>  9      0.08    50    70     0    30           1  0.3         0.7  0.625     1 #> 10      0.09    50    70     0    30           1  0.3         0.7  0.625     1 #> # … with 91 more rows, and 4 more variables: lift <dbl>, #> #   predicted_positives <int>, NB <dbl>, ppcr <dbl>  # And you can prepare Performance Data for more than one model prepare_performance_data(   probs = list(     \"First Model\" = example_dat$estimated_probabilities,     \"Second Model\" = example_dat$random_guess   ),   real = example_dat$outcome ) #> # A tibble: 202 × 15 #>    model   threshold    TP    TN    FN    FP sensitivity   FPR specificity   PPV #>    <chr>       <dbl> <int> <int> <int> <int>       <dbl> <dbl>       <dbl> <dbl> #>  1 First …      0       50     0     0   100           1  1           0    0.333 #>  2 First …      0.01    50    51     0    49           1  0.49        0.51 0.505 #>  3 First …      0.02    50    55     0    45           1  0.45        0.55 0.526 #>  4 First …      0.03    50    61     0    39           1  0.39        0.61 0.562 #>  5 First …      0.04    50    67     0    33           1  0.33        0.67 0.602 #>  6 First …      0.05    50    67     0    33           1  0.33        0.67 0.602 #>  7 First …      0.06    50    67     0    33           1  0.33        0.67 0.602 #>  8 First …      0.07    50    70     0    30           1  0.3         0.7  0.625 #>  9 First …      0.08    50    70     0    30           1  0.3         0.7  0.625 #> 10 First …      0.09    50    70     0    30           1  0.3         0.7  0.625 #> # … with 192 more rows, and 5 more variables: NPV <dbl>, lift <dbl>, #> #   predicted_positives <int>, NB <dbl>, ppcr <dbl>  # Notice that once you've put a list in the probs parameter you'll # receive a new # column in the Performance Data named \"Model\". If it's a named list # (like in our # example) the Model column will mention the names of each element # in the probs-list # as the name of the model, if it's unnamed list the Models will count # \"Model 1\", # \"Model 2\", etc.. according to the order of the estimated-probabilities # vector in the # list.   prepare_performance_data(   probs = list(     \"train\" = example_dat %>%       dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(estimated_probabilities),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(estimated_probabilities)   ),   real = list(     \"train\" = example_dat %>% dplyr::filter(type_of_set == \"train\") %>%       dplyr::pull(outcome),     \"test\" = example_dat %>% dplyr::filter(type_of_set == \"test\") %>%       dplyr::pull(outcome)   ) ) #> # A tibble: 202 × 15 #>    population threshold    TP    TN    FN    FP sensitivity   FPR specificity #>    <chr>          <dbl> <int> <int> <int> <int>       <dbl> <dbl>       <dbl> #>  1 train           0       28     0     0    68           1 1           0     #>  2 train           0.01    28    36     0    32           1 0.471       0.529 #>  3 train           0.02    28    39     0    29           1 0.426       0.574 #>  4 train           0.03    28    43     0    25           1 0.368       0.632 #>  5 train           0.04    28    46     0    22           1 0.324       0.676 #>  6 train           0.05    28    46     0    22           1 0.324       0.676 #>  7 train           0.06    28    46     0    22           1 0.324       0.676 #>  8 train           0.07    28    48     0    20           1 0.294       0.706 #>  9 train           0.08    28    48     0    20           1 0.294       0.706 #> 10 train           0.09    28    48     0    20           1 0.294       0.706 #> # … with 192 more rows, and 6 more variables: PPV <dbl>, NPV <dbl>, lift <dbl>, #> #   predicted_positives <int>, NB <dbl>, ppcr <dbl>"},{"path":"/reference/prepare_performance_data_for_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Preparing Performance Data for gt — prepare_performance_data_for_gt","title":"Preparing Performance Data for gt — prepare_performance_data_for_gt","text":"Preparing Performance Data gt","code":""},{"path":"/reference/prepare_performance_data_for_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preparing Performance Data for gt — prepare_performance_data_for_gt","text":"","code":"prepare_performance_data_for_gt(performance_data, main_slider)"},{"path":"/reference/prepare_performance_data_for_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preparing Performance Data for gt — prepare_performance_data_for_gt","text":"performance_data rtichoke Performance Data main_slider main slider - threshold, percent positives positives","code":""},{"path":"/reference/remove_grid_lines_from_plotly.html","id":null,"dir":"Reference","previous_headings":"","what":"remove_grid_lines_from_plotly — remove_grid_lines_from_plotly","title":"remove_grid_lines_from_plotly — remove_grid_lines_from_plotly","text":"remove_grid_lines_from_plotly","code":""},{"path":"/reference/remove_grid_lines_from_plotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove_grid_lines_from_plotly — remove_grid_lines_from_plotly","text":"","code":"remove_grid_lines_from_plotly(plotly_object)"},{"path":"/reference/remove_grid_lines_from_plotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove_grid_lines_from_plotly — remove_grid_lines_from_plotly","text":"plotly_object plotly plot performance metrics","code":""},{"path":"/reference/render_and_format_gt.html","id":null,"dir":"Reference","previous_headings":"","what":"Rendering and Formatting gt — render_and_format_gt","title":"Rendering and Formatting gt — render_and_format_gt","text":"Rendering Formatting gt","code":""},{"path":"/reference/render_and_format_gt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rendering and Formatting gt — render_and_format_gt","text":"","code":"render_and_format_gt(   performance_data,   main_slider,   perf_dat_type,   prevalence,   col_values )"},{"path":"/reference/render_and_format_gt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rendering and Formatting gt — render_and_format_gt","text":"performance_data rtichoke Performance Data main_slider main slider - threshold, percent positives positives prevalence prevalence populations col_values color palette","code":""},{"path":"/reference/render_performance_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Performance Table — render_performance_table","title":"Performance Table — render_performance_table","text":"Create Performance Table","code":""},{"path":"/reference/render_performance_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performance Table — render_performance_table","text":"","code":"render_performance_table(   performance_data,   chosen_threshold = NA,   output_type = \"reactable\",   main_slider = \"threshold\",   col_values = c(\"#5BC0BE\", \"#FC8D62\", \"#8DA0CB\", \"#E78AC3\", \"#A4243B\") )"},{"path":"/reference/render_performance_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performance Table — render_performance_table","text":"performance_data rtichoke Performance Data chosen_threshold chosen threshold display (non-interactive) output_type type output table, gt default main_slider main slider - threshold, percent positives positives col_values color palette","code":""},{"path":"/reference/render_performance_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performance Table — render_performance_table","text":"","code":"if (FALSE) {  one_pop_one_model_as_a_vector %>%   render_performance_table()  one_pop_one_model_as_a_vector_enforced_percentiles_symmetry %>%   render_performance_table(main_slider = \"ppcr\")  one_pop_one_model_as_a_list %>%   render_performance_table()  one_pop_one_model_as_a_list_enforced_percentiles_symmetry %>%   render_performance_table(main_slider = \"ppcr\")  one_pop_three_models %>%   render_performance_table()  one_pop_three_models_enforced_percentiles_symmetry %>%   render_performance_table(main_slider = \"ppcr\")  train_and_test_sets %>%   render_performance_table()  train_and_test_sets_enforced_percentiles_symmetry %>%   render_performance_table(main_slider = \"ppcr\") }"},{"path":"/reference/render_reactable_confusion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a reactable confusion matrix — render_reactable_confusion_matrix","title":"Render a reactable confusion matrix — render_reactable_confusion_matrix","text":"Render reactable confusion matrix","code":""},{"path":"/reference/render_reactable_confusion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a reactable confusion matrix — render_reactable_confusion_matrix","text":"","code":"render_reactable_confusion_matrix(confusion_matrix)"},{"path":"/reference/render_reactable_confusion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a reactable confusion matrix — render_reactable_confusion_matrix","text":"confusion_matrix confusion matrix","code":""},{"path":"/reference/replace_nan_with_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Replancing NaN with NA — replace_nan_with_na","title":"Replancing NaN with NA — replace_nan_with_na","text":"Replancing NaN NA","code":""},{"path":"/reference/replace_nan_with_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replancing NaN with NA — replace_nan_with_na","text":"","code":"replace_nan_with_na(performance_dat)"},{"path":"/reference/replace_nan_with_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replancing NaN with NA — replace_nan_with_na","text":"performance_dat original performance data","code":""},{"path":"/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Shiny Application — run_app","title":"Run the Shiny Application — run_app","text":"Run Shiny Application","code":""},{"path":"/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Shiny Application — run_app","text":"","code":"run_app(   onStart = NULL,   options = list(),   enableBookmarking = NULL,   uiPattern = \"/\",   ... )"},{"path":"/reference/run_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Shiny Application — run_app","text":"onStart function called app actually run. needed shinyAppObj, since shinyAppDir case, global.R file can used purpose. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. enableBookmarking Can one \"url\", \"server\", \"disable\". default value, NULL, respect setting previous calls  enableBookmarking(). See enableBookmarking() information bookmarking app. uiPattern regular expression applied GET request determine whether ui used handle request. Note entire request path must match regular expression order match considered successful. ... arguments pass golem_opts. See ?golem::get_golem_options details.","code":""},{"path":"/reference/set_axis_titles.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Titles for x and y axis in plotly objects — set_axis_titles","title":"Set Titles for x and y axis in plotly objects — set_axis_titles","text":"Set Titles x y axis plotly objects","code":""},{"path":"/reference/set_axis_titles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Titles for x and y axis in plotly objects — set_axis_titles","text":"","code":"set_axis_titles(plotly_object, curve, max_y_range = NA)"},{"path":"/reference/set_axis_titles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Titles for x and y axis in plotly objects — set_axis_titles","text":"plotly_object plotly object curve required curve max_y_range maximum value y range","code":""},{"path":"/reference/set_decision_curve_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the limits for Decision Curve — set_decision_curve_limits","title":"Set the limits for Decision Curve — set_decision_curve_limits","text":"Set limits Decision Curve","code":""},{"path":"/reference/set_decision_curve_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the limits for Decision Curve — set_decision_curve_limits","text":"","code":"set_decision_curve_limits(decision_curve)"},{"path":"/reference/set_decision_curve_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the limits for Decision Curve — set_decision_curve_limits","text":"decision_curve ggplot object Decision Curve","code":""},{"path":"/reference/set_gains_curve_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the limits for Gains Curve — set_gains_curve_limits","title":"Set the limits for Gains Curve — set_gains_curve_limits","text":"Set limits Gains Curve","code":""},{"path":"/reference/set_gains_curve_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the limits for Gains Curve — set_gains_curve_limits","text":"","code":"set_gains_curve_limits(gains_curve)"},{"path":"/reference/set_gains_curve_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the limits for Gains Curve — set_gains_curve_limits","text":"gains_curve ggplot object Gains Curve","code":""},{"path":"/reference/set_lift_curve_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the limits for lift curve — set_lift_curve_limits","title":"Set the limits for lift curve — set_lift_curve_limits","text":"Set limits lift curve","code":""},{"path":"/reference/set_lift_curve_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the limits for lift curve — set_lift_curve_limits","text":"","code":"set_lift_curve_limits(lift_curve)"},{"path":"/reference/set_lift_curve_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the limits for lift curve — set_lift_curve_limits","text":"lift_curve ggplot object lift curve","code":""},{"path":"/reference/set_precision_recall_curve_limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the limits for percision recall curve — set_precision_recall_curve_limits","title":"Set the limits for percision recall curve — set_precision_recall_curve_limits","text":"Set limits percision recall curve","code":""},{"path":"/reference/set_precision_recall_curve_limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the limits for percision recall curve — set_precision_recall_curve_limits","text":"","code":"set_precision_recall_curve_limits(precision_recall_curve)"},{"path":"/reference/set_precision_recall_curve_limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the limits for percision recall curve — set_precision_recall_curve_limits","text":"precision_recall_curve ggplot object precision recall curve","code":""},{"path":"/reference/set_styling_for_rtichoke.html","id":null,"dir":"Reference","previous_headings":"","what":"Set styling for rtichoke plotly — set_styling_for_rtichoke","title":"Set styling for rtichoke plotly — set_styling_for_rtichoke","text":"Set styling rtichoke plotly","code":""},{"path":"/reference/set_styling_for_rtichoke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set styling for rtichoke plotly — set_styling_for_rtichoke","text":"","code":"set_styling_for_rtichoke(plotly_object, curve, max_y_range = NA)"},{"path":"/reference/set_styling_for_rtichoke.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set styling for rtichoke plotly — set_styling_for_rtichoke","text":"plotly_object plotly object curve required curve max_y_range maximum value y range (lift curve)","code":""},{"path":"/reference/train_and_test_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Data — train_and_test_sets","title":"Example Performance Data — train_and_test_sets","text":"example Performance Data contains test train sets","code":""},{"path":"/reference/train_and_test_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Data — train_and_test_sets","text":"","code":"train_and_test_sets"},{"path":"/reference/train_and_test_sets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Performance Data — train_and_test_sets","text":"data frame 202 rows 15 variables:","code":""},{"path":"/reference/train_and_test_sets_enforced_percentiles_symmetry.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Performance Data — train_and_test_sets_enforced_percentiles_symmetry","title":"Example Performance Data — train_and_test_sets_enforced_percentiles_symmetry","text":"example Performance Data contains test train sets","code":""},{"path":"/reference/train_and_test_sets_enforced_percentiles_symmetry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Performance Data — train_and_test_sets_enforced_percentiles_symmetry","text":"","code":"train_and_test_sets_enforced_percentiles_symmetry"},{"path":"/reference/train_and_test_sets_enforced_percentiles_symmetry.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example Performance Data — train_and_test_sets_enforced_percentiles_symmetry","text":"data frame 202 rows 15 variables:","code":""},{"path":"/news/index.html","id":"rtichoke-0009000","dir":"Changelog","previous_headings":"","what":"rtichoke 0.0.0.9000","title":"rtichoke 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
