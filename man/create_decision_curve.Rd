% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decision.R
\name{create_decision_curve}
\alias{create_decision_curve}
\title{Decision Curve}
\usage{
create_decision_curve(
  probs,
  reals,
  by = 0.01,
  stratified_by = "probability_threshold",
  chosen_threshold = NA,
  interactive = TRUE,
  col_values = c("#5BC0BE", "#FC8D62", "#8DA0CB", "#E78AC3", "#A4243B"),
  size = NULL
)
}
\arguments{
\item{probs}{a list of vectors of estimated probabilities
(one for each model or one for each population)}

\item{reals}{a list of vectors of binary outcomes (one for each population)}

\item{by}{number: increment of the sequence.}

\item{stratified_by}{Performance Metrics can be stratified by Probability
Threshold or alternatively by Predicted Positives Condition Rate}

\item{chosen_threshold}{a chosen threshold to display (for non-interactive)}

\item{interactive}{whether the plot should be interactive
plots}

\item{col_values}{color palette}

\item{size}{the size of the curve}
}
\description{
Create a decision Curve
}
\examples{

\dontrun{


create_decision_curve(
  probs = list(example_dat$estimated_probabilities),
  reals = list(example_dat$outcome)
)

create_decision_curve(
  probs = list(example_dat$estimated_probabilities),
  reals = list(example_dat$outcome),
  stratified_by = "ppcr"
)

create_decision_curve(
  probs = list(
    "First Model" = example_dat$estimated_probabilities,
    "Second Model" = example_dat$random_guess
  ),
  reals = list(example_dat$outcome)
)


create_decision_curve(
  probs = list(
    "First Model" = example_dat$estimated_probabilities,
    "Second Model" = example_dat$random_guess
  ),
  reals = list(example_dat$outcome),
  stratified_by = "ppcr"
)


create_decision_curve(
  probs = list(
    "train" = example_dat \%>\%
      dplyr::filter(type_of_set == "train") \%>\%
      dplyr::pull(estimated_probabilities),
    "test" = example_dat \%>\% dplyr::filter(type_of_set == "test") \%>\%
      dplyr::pull(estimated_probabilities)
  ),
  reals = list(
    "train" = example_dat \%>\% dplyr::filter(type_of_set == "train") \%>\%
      dplyr::pull(outcome),
    "test" = example_dat \%>\% dplyr::filter(type_of_set == "test") \%>\%
      dplyr::pull(outcome)
  )
)

create_decision_curve(
  probs = list(
    "train" = example_dat \%>\%
      dplyr::filter(type_of_set == "train") \%>\%
      dplyr::pull(estimated_probabilities),
    "test" = example_dat \%>\% dplyr::filter(type_of_set == "test") \%>\%
      dplyr::pull(estimated_probabilities)
  ),
  reals = list(
    "train" = example_dat \%>\% dplyr::filter(type_of_set == "train") \%>\%
      dplyr::pull(outcome),
    "test" = example_dat \%>\% dplyr::filter(type_of_set == "test") \%>\%
      dplyr::pull(outcome)
  ),
  stratified_by = "ppcr"
)

}
}
